/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { getContractByCodeHash } from "./contracts";
import { default as ClaimRewardsScriptJson } from "../ClaimRewards.ral.json";
import { default as GetTokenScriptJson } from "../test/GetToken.ral.json";
import { default as SetRewardRateScriptJson } from "../SetRewardRate.ral.json";
import { default as StakeScriptJson } from "../Stake.ral.json";
import { default as UnstakeScriptJson } from "../Unstake.ral.json";
import { default as UpdateStartTimeScriptJson } from "../UpdateStartTime.ral.json";

export const ClaimRewards = new ExecutableScript<{ staking: HexString }>(
  Script.fromJson(ClaimRewardsScriptJson, "", []),
  getContractByCodeHash
);

export const GetToken = new ExecutableScript<{
  token: HexString;
  amount: bigint;
}>(Script.fromJson(GetTokenScriptJson, "", []), getContractByCodeHash);

export const SetRewardRate = new ExecutableScript<{
  staking: HexString;
  rewardRate: bigint;
}>(Script.fromJson(SetRewardRateScriptJson, "", []), getContractByCodeHash);

export const Stake = new ExecutableScript<{
  staking: HexString;
  amount: bigint;
}>(Script.fromJson(StakeScriptJson, "", []), getContractByCodeHash);

export const Unstake = new ExecutableScript<{
  staking: HexString;
  amount: bigint;
}>(Script.fromJson(UnstakeScriptJson, "", []), getContractByCodeHash);

export const UpdateStartTime = new ExecutableScript<{ staking: HexString }>(
  Script.fromJson(UpdateStartTimeScriptJson, "", []),
  getContractByCodeHash
);
